#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<string.h>


#define N 200
#define Login "admin"
#define MAX 1000

typedef struct 
{
	char id[20];
	float price;
	char state[20];
}Rooms;

Rooms room[N];

int room_num;

typedef struct 
{
	char Name[20];
	char state[20];
	char identity[30];
	float price;
	float Discounts;
	float price_num;
}Users;
Users user[N];
Users user2;
int  user_num;

void View_room();
void Opening_a_house();
void check_out();
void View_id();
void Recharge();

void add_room();
void del_room();
void find_room();
void modify_room();
void All_room();
void read_room();
void save_room();
void read_User();
void save_User();
void add_User();
void del_User();
void find_User();
void modify_User();
void All_User();

void main_1();
void main_2();

int main() 
{
	read_room();
	read_User();
	int i = 0, j = 0, k = 0;
	int choice = 1;
	char name[10];
	while (choice != 0)
	{
		printf("***********欢迎使用旅馆小帮手***********\n");
		printf("---------------- 1.登录 ----------------\n");
		printf("---------------- 2.注册 ----------------\n");
		printf("---------------- 0.退出 ----------------\n");
		printf("请输入操作数:>");
		scanf("%d", &choice);
		switch (choice)
		{
		case 1:
			printf("请输入用户名:>");
			scanf("%s", name);
			if (strcmp(name, Login) == 0) 
			{
				system("cls");
				main_1();
				break;
			}
			for (i = 0; i < user_num; i++) 
			{
				if (strcmp(name, user[i].Name) == 0) 
				{
					user2 = user[i];
					system("cls");
					main_2();
					j = 1;
					break;
				}
			}
			if (j != 1) 
			{
				printf("没有该账号，请进行注册！");
				j = 0;
			}
			break;

		case 2:
			add_User();
			break;
		case 0:
			return 0;
		default:
			break;
		}
		save_room();
		save_User();
		system("pause");
		system("cls");
	}
	return 0;
}

void main_1()
{
	int i = 0, j = 0, k = 0;
	int choice = 1;
	char name[10];
	while (choice != 0) 
	{
		printf("***********欢迎使用旅馆小帮手***********\n");
		printf("      欢迎管理员：%s 当前房间数：%d\n", Login, room_num);
		printf("---------------- 1.增加房间信息 --------\n");
		printf("---------------- 2.删除房间信息 --------\n");
		printf("---------------- 3.修改房间信息 --------\n");
		printf("---------------- 4.查找房间信息 --------\n");
		printf("---------------- 5.浏览房间信息 --------\n");
		printf("---------------- 6.浏览顾客信息 --------\n");
		printf("---------------- 7.查找顾客信息 --------\n");
		printf("---------------- 8.修改顾客信息 --------\n");
		printf("---------------- 9.删除房间信息 --------\n");
		printf("---------------- 0.退出登录 ------------\n");
		printf("请输入操作数:>");
		scanf("%d", &choice);
		switch (choice)
		{
		case 1:
			add_room();
			break;
		case 2:
			del_room();
			break;
		case 3:
			modify_room();
			break;
		case 4:
			find_room();
			break;
		case 5:
			All_room();
			break;
		case 6:
			All_User();
			break;
		case 7:
			find_User();
			break;
		case 8:
			modify_User();
			break;
		case 9:
			del_User();
			break;
		case 0:
			return;
		default:
			break;
		}
		save_room();
		save_User();
		system("pause");
		system("cls");
	}
	return;
}
void main_2()
{
	int i = 0, j = 0, k = 0;
	int choice = 1;
	char name[10];
	while (choice != 0)
	{
		printf("***********欢迎使用旅馆小帮手***********\n");
		printf("欢迎顾客：%s 当前余额：%.1f 享受折扣：%.1f\n", user2.Name, user2.price, user2.Discounts);
		printf("---------------- 1.查看空闲房间 --------\n");
		printf("---------------- 2.开房 ----------------\n");
		printf("---------------- 3.退房 ----------------\n");
		printf("---------------- 4.查看我的房卡 --------\n");
		printf("---------------- 5.充值 ----------------\n");
		printf("---------------- 0.退出登录 ------------\n");
		printf("请输入操作数:>");
		scanf("%d", &choice);
		switch (choice)
		{
		case 1:
			View_room();
			break;
		case 2:
			Opening_a_house();
			break;
		case 3:
			check_out();
			break;
		case 4:
			View_id();
			break;
		case 5:
			Recharge();
			break;
		case 0:
			return;
		default:
			break;
		}
		save_room();
		save_User();
		system("pause");
		system("cls");
	}
	return;
}


void add_room()
{
	int i = 0, j = 0, k = 0;
	printf("第%d个房间信息：\n", room_num + 1);
	printf("请输入房间号：");
	scanf("%s", room[room_num].id);
	for (i = 0; i < room_num; i++) {
		if (strcmp(room[room_num].id, room[i].id) == 0)
		{
			printf("系统已有该房间号，请重新添加！\n");
			return;
		}
	}
	printf("请输入价格：");
	scanf("%f", &room[room_num].price);
	strcpy(room[room_num].state, "空闲");
	room_num++;
	printf("房间信息录入成功！\n");
}
void del_room()
{
	int i = 0, j = 0, k = 0;
	printf("请输入要查找的房间号：");
	scanf("%s", room[room_num].id);

	for (i = 0; i < room_num; i++) 
	{

		if (strcmp(room[room_num].id, room[i].id) == 0)
		{
			printf("======================================\n");
			printf("%-10s%-10s%-10s%-10s\n", "序号", "房间号", "价格", "是否入住");
			printf("%-10d%-10s%-10.2f%-10s\n", i + 1, room[i].id, room[i].price, room[i].state);
			printf("======================================\n");
			printf("查找成功！\n");
			if (strcmp(room[i].state, "空闲") != 0)
			{
				printf("该房间正在使用，无法删除！\n");
				return;
			}

			printf("是否删除此数据（1/0）：");
			scanf("%d", &k);
			if (k == 1) 
			{
				for (; i < room_num - 1; i++)
					room[i] = room[i + 1];
				room_num--;
				printf("删除成功！\n");
			}
			else 
			{
				printf("删除取消！\n");
			}
			return;
		}
	}
	printf("没有查找到该房间号！\n");
	return;
}
void find_room()
{
	int i = 0, j = 0, k = 0;
	printf("请输入要查找的房间号：");
	scanf("%s", room[room_num].id);
	for (i = 0; i < room_num; i++) 
	{

		if (strcmp(room[room_num].id, room[i].id) == 0)
		{
			printf("======================================\n");
			printf("%-10s%-10s%-10s%-10s\n", "序号", "房间号", "价格", "是否入住");
			printf("%-10d%-10s%-10.2f%-10s\n", i + 1, room[i].id, room[i].price, room[i].state);
			printf("======================================\n");
			printf("查找成功！\n");
			return;
		}
	}
	printf("没有查找到该房间号！\n");
	return;
}
void modify_room()
{
	int i = 0, j = 0, k = 0;
	printf("请输入要查找的房间号：");
	scanf("%s", room[room_num].id);

	for (i = 0; i < room_num; i++) 
	{

		if (strcmp(room[room_num].id, room[i].id) == 0)
		{
			printf("======================================\n");
			printf("%-10s%-10s%-10s%-10s\n", "序号", "房间号", "价格", "是否入住");
			printf("%-10d%-10s%-10.2f%-10s\n", i + 1, room[i].id, room[i].price, room[i].state);
			printf("======================================\n");
			printf("查找成功！\n");
			printf("是否修改此数据（1/0）：");
			scanf("%d", &k);
			if (k == 1)
			{
				printf("请修改价格：");
				scanf("%f", &room[i].price);
				printf("修改成功！\n");
			}
			else 
			{
				printf("修改取消！\n");
			}
			return;
		}
	}
	printf("没有查找到该房间号！\n");
	return;
}
void All_room()
{
	int i = 0, j = 0, k = 0;
	printf("======================================\n");
	printf("%-10s%-10s%-10s%-10s\n", "序号", "房间号", "价格", "是否入住");
	for (i = 0; i < room_num; i++) 
	{
		printf("%-10d%-10s%-10.2f%-10s\n", i + 1, room[i].id, room[i].price, room[i].state);
	}
	printf("======================================\n");
	printf("浏览成功！\n");
}

void add_User()
{
	int i = 0, j = 0, k = 0;
	printf("顾客信息注册：\n", user_num + 1);
	printf("请输入顾客名：");
	scanf("%s", user[user_num].Name);
	if (strcmp(user[user_num].Name, Login) == 0)
	{
		printf("该名字是管理员名字，不可添加！\n");
		return;
	}
	for (i = 0; i < user_num; i++) 
	{
		if (strcmp(user[user_num].Name, user[i].Name) == 0) 
		{
			printf("系统已有该名字，不可重复！\n");
			return;
		}
	}
	strcpy(user[user_num].state, "未入住");
	strcpy(user[user_num].identity, "普通账号");

	user[user_num].price = 0;
	user[user_num].price_num = 0;
	user[user_num].Discounts = 10.0;


	user_num++;
	printf("顾客信息已录入，请登录！\n");
}
void del_User()
{
	int i = 0, j = 0, k = 0;
	printf("请输入要查找的顾客姓名：");
	scanf("%s", user[user_num].Name);
	for (i = 0; i < user_num; i++) 
	{
		if (strcmp(user[user_num].Name, user[i].Name) == 0)
		{
			printf("======================================\n");
			printf("%-10s%-10s%-10s%-10s%-10s%-10s%-10s\n", "序号", "用户名", "是否入住", "身份", "账户余额", "折扣", "累计充值");
			printf("%-10d%-10s%-10s%-10s%-10.2f%-10.2f%-10.2f\n", i + 1, user[i].Name, \
				user[i].state, user[i].identity, user[i].price, user[i].Discounts, user[i].price_num);
			printf("======================================\n");
			printf("查找成功！\n");
			printf("是否删除此数据（1/0）：");
			scanf("%d", &k);
			if (k == 1) {
				for (; i < user_num - 1; i++)
					user[i] = user[i + 1];
				user_num--;
				printf("删除成功！\n");
			}
			else {
				printf("删除取消！\n");
			}
			return;

		}
	}
	printf("没有查找到该房间号！\n");
	return;

}
void find_User()
{
	int i = 0, j = 0, k = 0;
	printf("请输入要查找的顾客姓名：");
	scanf("%s", user[user_num].Name);
	for (i = 0; i < user_num; i++) {
		if (strcmp(user[user_num].Name, user[i].Name) == 0) 
		{
			printf("======================================\n");
			printf("%-10s%-10s%-10s%-10s%-10s%-10s%-10s\n", "序号", "用户名", "是否入住", "身份", "账户余额", "折扣", "累计充值");
			printf("%-10d%-10s%-10s%-10s%-10.2f%-10.2f%-10.2f\n", i + 1, user[i].Name, \
				user[i].state, user[i].identity, user[i].price, user[i].Discounts, user[i].price_num);
			printf("======================================\n");
			printf("查找成功！\n");
			return;
		}
	}
	printf("没有查找到该房间号！\n");
	return;
}
void modify_User()
{
	int i = 0, j = 0, k = 0;
	printf("请输入要查找的顾客姓名：");
	scanf("%s", user[user_num].Name);
	for (i = 0; i < user_num; i++) 
	{
		if (strcmp(user[user_num].Name, user[i].Name) == 0) 
		{
			printf("======================================\n");
			printf("%-10s%-10s%-10s%-10s%-10s%-10s%-10s\n", "序号", "用户名", "是否入住", "身份", "账户余额", "折扣", "累计充值");
			printf("%-10d%-10s%-10s%-10s%-10.2f%-10.2f%-10.2f\n", i + 1, user[i].Name, \
				user[i].state, user[i].identity, user[i].price, user[i].Discounts, user[i].price_num);
			printf("======================================\n");
			printf("查找成功！\n");
			printf("是否修改此数据（1/0）：");
			scanf("%d", &k);
			if (k == 1) {
				printf("请修改折扣：");
				scanf("%f", &user[i].Discounts);
				printf("修改成功！\n");
			}
			else {
				printf("修改取消！\n");
			}
			return;
		}
	}
	printf("没有查找到该房间号！\n");
	return;
}
void All_User()
{
	int i = 0, j = 0, k = 0;
	printf("======================================\n");
	printf("%-10s%-10s%-10s%-10s%-10s%-10s%-10s\n", "序号", "用户名", "是否入住", "身份", "账户余额", "折扣", "累计充值");
	for (i = 0; i < user_num; i++) {
		printf("%-10d%-10s%-10s%-10s%-10.2f%-10.2f%-10.2f\n", i + 1, user[i].Name, \
			user[i].state, user[i].identity, user[i].price, user[i].Discounts, user[i].price_num);
	}
	printf("======================================\n");
	printf("浏览成功！\n");
}



void View_room()
{
	int i = 0, j = 0, k = 0;
	printf("======================================\n");
	printf("%-10s%-10s%-10s%-10s\n", "序号", "房间号", "价格", "是否入住");
	for (i = 0; i < room_num; i++) 
	{
		if (strcmp(room[i].state, "空闲") == 0) 
		{
			printf("%-10d%-10s%-10.2f%-10s\n", i + 1, room[i].id, room[i].price * (user2.Discounts / 10), room[i].state);
		}
	}
	printf("======================================\n");
	printf("浏览成功！\n");
	return;
}
void Opening_a_house()
{
	int i = 0, j = 0, k = 0;

	if (strcmp(user2.state, "未入住") != 0)
	{
		printf("您已经入住，不能再入住了！\n");
		return;
	}
	printf("请输入要开房的房间号：");
	scanf("%s", room[room_num].id);
	for (i = 0; i < room_num; i++) 
	{

		if ((strcmp(room[room_num].id, room[i].id) == 0) && (strcmp("空闲", room[i].state) == 0))
		{
			if (user2.price < room[i].price) 
			{
				printf("您的余额不够支付房间费，请充值！\n");
				return;
			}
			else 
			{
				user2.price -= (room[i].price * (user2.Discounts / 10));
			}
			printf("======================================\n");
			printf("%-10s%-10s%-10s%-10s\n", "序号", "房间号", "价格", "是否入住");
			printf("%-10d%-10s%-10.2f%-10s\n", i + 1, room[i].id, room[i].price, room[i].state);
			printf("======================================\n");
			strcpy(room[i].state, "已入住");
			strcpy(user2.state, room[i].id);
			printf("开房成功！\n");
			return;
		}
	}
	printf("没有查找到该房间号或该房间号已有人入住！\n");
	return;
}
void check_out()
{
	if (strcmp(user2.state, "未入住") == 0)
	{
		printf("您还未入住，无法退房！\n");
		return;
	}
	int i = 0, j = 0, k = 0;
	for (i = 0; i < room_num; i++) 
	{
		if (strcmp(user2.state, room[i].id) == 0)
		{
			strcpy(room[i].state, "空闲");
			strcpy(user2.state, "未入住");
			printf("退房成功！\n");
			return;
		}
	}
	printf("Bug！\n");
}
void View_id()
{
	if (strcmp(user2.state, "未入住") == 0)
	{
		printf("您还未入住，无法查看！\n");
		return;
	}
	int i = 0, j = 0, k = 0;
	for (i = 0; i < room_num; i++) 
	{

		if (strcmp(user2.state, room[i].id) == 0) 
		{
			printf("======================================\n");
			printf("%-10s%-10s%-10s%-10s\n", "序号", "房间号", "价格", "是否入住");
			printf("%-10d%-10s%-10.2f%-10s\n", i + 1, room[i].id, room[i].price, room[i].state);
			printf("======================================\n");
			printf("查看成功！\n");
			return;
		}
	}
	printf("Bug！\n");
}
void Recharge()
{
	int i = 0, j = 0, k = 0;
	printf("是否充值到账户（1/0）：");
	scanf("%d", &k);
	if (k == 1) 
	{
		printf("充值多少：");
		scanf("%f", &user[user_num].price);
		user2.price += user[user_num].price;
		user2.price_num += user[user_num].price;
		if (user2.price_num >= MAX && strcmp(user2.identity, "普通账号") == 0) 
		{
			printf("祝贺您，升级为会员,每次消费享受打9折！\n");
			strcpy(user2.identity, "会员账号");
			user2.Discounts = 9.0;
		}
		printf("充值成功！\n");
	}
	else 
	{
		printf("充值取消！\n");
	}
	return;
}

void read_room()
{
	FILE* file = fopen("房间信息.txt", "r");
	if (file == NULL)
	{
		return;
	}
	room_num = 0;
	while (fgetc(file) != EOF)
	{
		fseek(file, -1, 1);
		int rat = fscanf(file, "%s %f %s\n", room[room_num].id, &room[room_num].price, room[room_num].state);
		if (rat == 0) 
		{
			break;
		}
		room_num++;
	}
	fclose(file);
}
void save_room()
{
	int i = 0, j = 0, k = 0;
	FILE* fp = fopen("房间信息.txt", "w+");
	for (i = 0; i < room_num; i++) 
	{
		fprintf(fp, "%s %.2f %s\n", room[i].id, room[i].price, room[i].state);
	}
	fclose(fp);
}
void read_User()
{
	FILE* file = fopen("客户信息.txt", "r");
	if (file == NULL) 
	{
		return;
	}
	user_num = 0;
	while (fgetc(file) != EOF)
	{
		fseek(file, -1, 1);
		int rat = fscanf(file, "%s %s %s %f %f %f\n", user[user_num].Name, user[user_num].state, user[user_num].identity, &user[user_num].price, &user[user_num].Discounts, &user[user_num].price_num);
		if (rat == 0) 
		{
			break;
		}
		user_num++;
	}
	fclose(file);
}
void save_User()
{
	int i = 0, j = 0, k = 0;
	for (i = 0; i < user_num; i++) 
	{
		if (strcmp(user2.Name, user[i].Name) == 0) 
		{
			user[i] = user2;
		}
	}
	FILE* fp = fopen("客户信息.txt", "w+");
	for (i = 0; i < user_num; i++) 
	{
		fprintf(fp, "%s %s %s %.2f %.2f %.2f\n", user[i].Name, user[i].state, user[i].identity, user[i].price, user[i].Discounts, user[i].price_num);
	}
	fclose(fp);
}
